//Android
def androidSdkVersions = [
        androidMinSdk: 21,
        androidTargetSdk: 28,
        androidCompileSdk: 28,
]

//Libraries
def libVersions = [
        kotlin: '1.3.41',
        rxJava: '2.2.11',
        rxKotlin: '2.4.0',
        rxAndroid: '2.1.1',
        javaxInject: '1',
        dagger: '2.24',
        retrofit: '2.6.1',
        okHttp: '4.1.0',
        gson: '2.8.5',
        timber: '4.7.1',
        appCompat: '1.1.0',
        coreKtx: '1.1.0',
        constraintLayout: '1.1.3',
        rxBinding: '3.0.0',
        lifecycle: '2.2.0-alpha01',
        glide: '4.9.0',
        navigation: '2.1.0'
]

//Libraries for Testing
def testingLibVersions = [
        jUnit: '4.12',
        runner: '1.2.0',
        espressoCore: '3.2.0',
        assertJ: '3.11.2',
        mockitoKotlin: '2.2.0',
        mockk: '1.9.3',
        testCore: '1.0.0',
        archCoreTesting: '2.1.0'
]

def libRepositories = [
        kotlin:                 "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${libVersions.kotlin}",
        appCompat:              "androidx.appcompat:appcompat:${libVersions.appCompat}",
        coreKtx:                "androidx.core:core-ktx:${libVersions.coreKtx}",
        constraintLayout:       "androidx.constraintlayout:constraintlayout:${libVersions.constraintLayout}",
        dagger:                 "com.google.dagger:dagger:${libVersions.dagger}",
        daggerCompiler:         "com.google.dagger:dagger-compiler:${libVersions.dagger}",
        daggerAndroid:          "com.google.dagger:dagger-android:${libVersions.dagger}",
        daggerSupport:          "com.google.dagger:dagger-android-support:${libVersions.dagger}",
        daggerProcessor:        "com.google.dagger:dagger-android-processor:${libVersions.dagger}",
        rxKotlin:               "io.reactivex.rxjava2:rxkotlin:${libVersions.rxKotlin}",
        rxAndroid:              "io.reactivex.rxjava2:rxandroid:${libVersions.rxAndroid}",
        javaxInject:            "javax.inject:javax.inject:${libVersions.javaxInject}",
        timber:                 "com.jakewharton.timber:timber:${libVersions.timber}",
        gson:                   "com.google.code.gson:gson:${libVersions.gson}",
        okHttp:                 "com.squareup.okhttp3:okhttp:${libVersions.okHttp}",
        okHttpLogger:           "com.squareup.okhttp3:logging-interceptor:${libVersions.okHttp}",
        retrofit:               "com.squareup.retrofit2:retrofit:${libVersions.retrofit}",
        retrofitConverter:      "com.squareup.retrofit2:converter-gson:${libVersions.retrofit}",
        retrofitAdapter:        "com.squareup.retrofit2:adapter-rxjava2:${libVersions.retrofit}",
        rxBinding:              "com.jakewharton.rxbinding3:rxbinding:${libVersions.rxBinding}",
        rxBindingCore:          "com.jakewharton.rxbinding3:rxbinding-core:${libVersions.rxBinding}",
        rxBindingSwipeRefresh:  "com.jakewharton.rxbinding3:rxbinding-swiperefreshlayout:${libVersions.rxBinding}",
        rxBindingAppCompat:     "com.jakewharton.rxbinding3:rxbinding-appcompat:${libVersions.rxBinding}",
        rxBindingMaterial:      "com.jakewharton.rxbinding3:rxbinding-material:${libVersions.rxBinding}",
        archRuntime:            "androidx.lifecycle:lifecycle-runtime:${libVersions.lifecycle}",
        archExtensions:         "androidx.lifecycle:lifecycle-extensions:${libVersions.lifecycle}",
        archCompiler:           "androidx.lifecycle:lifecycle-compiler:${libVersions.lifecycle}",
        viewmodel:              "androidx.lifecycle:lifecycle-viewmodel-ktx:${libVersions.lifecycle}",
        glide:                  "com.github.bumptech.glide:glide:${libVersions.glide}",
        glideCompiler:          "com.github.bumptech.glide:compiler:${libVersions.glide}",
        navigationFragment:     "androidx.navigation:navigation-fragment-ktx:${libVersions.navigation}",
        navigationUi:           "androidx.navigation:navigation-ui-ktx:${libVersions.navigation}"
]

def testingLibRepositories = [
        jUnit:          "junit:junit:${testingLibVersions.jUnit}",
        runner:         "androidx.test:runner:${testingLibVersions.runner}",
        espressoCore:   "androidx.test.espresso:espresso-core:${testingLibVersions.espressoCore}",
        kotlinJUnit:    "org.jetbrains.kotlin:kotlin-test-junit:${libVersions.kotlin}",
        assertj:        "org.assertj:assertj-core:${testingLibVersions.assertJ}",
        mockitoKotlin:  "com.nhaarman.mockitokotlin2:mockito-kotlin:${testingLibVersions.mockitoKotlin}",
        mockk:          "io.mockk:mockk:${testingLibVersions.mockk}",
        testCore:       "androidx.test:core:${testingLibVersions.testCore}",
        archCoreTesting:"androidx.arch.core:core-testing:${testingLibVersions.archCoreTesting}"
]

ext.androidVersions = androidSdkVersions
ext.libraries = [dependencies: libRepositories]
ext.testingLibraries = [testDependencies: testingLibRepositories]
